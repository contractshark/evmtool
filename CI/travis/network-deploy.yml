# travis-ci
# hyperledger besu configuration 
# SPDX: ISC

os: linux
dist: bionic
sudo: required
language: node_js
node_js: "10"
 
script: skip
 
jobs:
  include:
    - stage: Lint
      script:
        - cd $TRAVIS_BUILD_DIR/client && npm install && npm run lint
        - cd $TRAVIS_BUILD_DIR/server && npm install && npm run lint
 
    - stage: Tests
      script: echo "No tests at the moment"
 
    - stage: Build and push image
      services:
        - docker
      install: skip
      before_script:
        - docker build -t ${NETWORK}/besurpc-server -f Dockerfile.server .
        - docker build -t ${NETWORK}/besurpc-client -f Dockerfile.client .
      script:
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker tag ${NETWORK}/besurpc-server ${NETWORK}/besurpc-server:latest
        - docker push ${NETWORK}/besurpc-server:latest
        - docker tag ${NETWORK}/besurpc-server ${NETWORK}/besurpc-server:$TRAVIS_BUILD_ID
        - docker push ${NETWORK}/besurpc-server:$TRAVIS_BUILD_ID
        - docker tag ${NETWORK}/besurpc-client ${NETWORK}/besurpc-client:latest
        - docker push ${NETWORK}/besurpc-client:latest
        - docker tag ${NETWORK}/besurpc-client ${NETWORK}/besurpc-client:$TRAVIS_BUILD_ID
        - docker push ${NETWORK}/besurpc-client:$TRAVIS_BUILD_ID
 
    - stage: Build and push image (tagged)
      services:
        - docker
      install: skip
      before_script:
        - docker build -t ${NETWORK}/besurpc-server -f Dockerfile.server .
        - docker build -t ${NETWORK}/besurpc-client -f Dockerfile.client .
      script:
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker tag ${NETWORK}/besurpc-server ${NETWORK}/besurpc-server:latest
        - docker push ${NETWORK}/besurpc-server:latest
        - docker tag ${NETWORK}/besurpc-server ${NETWORK}/besurpc-server:testnet
        - docker push ${NETWORK}/besurpc-server:testnet
        - docker tag ${NETWORK}/besurpc-server ${NETWORK}/besurpc-server:$TRAVIS_TAG
        - docker push ${NETWORK}/besurpc-server:$TRAVIS_TAG
        - docker tag ${NETWORK}/besurpc-client ${NETWORK}/besurpc-client:latest
        - docker push ${NETWORK}/besurpc-client:latest
        - docker tag ${NETWORK}/besurpc-client ${NETWORK}/besurpc-client:testnet
        - docker push ${NETWORK}/besurpc-client:testnet
        - docker tag ${NETWORK}/besurpc-client ${NETWORK}/besurpc-client:$TRAVIS_TAG
        - docker push ${NETWORK}/besurpc-client:$TRAVIS_TAG
 
    - stage: Deploy in devnet
      install: skip
      before_script:
        - openssl aes-256-cbc -K ${ENCRYPTED_STRING_KEY} -iv ${ENCRYPTED_STRING_KEY} -in travis.pem.enc -out travis.pem -d
      script:
        - ssh -i ./travis.pem -l $DEVNET_SSH_USER $DEVNET_SSH_IP docker service update --image ${NETWORK}/besurpc-client:latest devnet_besurpc
        - ssh -i ./travis.pem -l $DEVNET_SSH_USER $DEVNET_SSH_IP docker service update --image ${NETWORK}/besurpc-server:latest devnet_besurpc_crawler
        - ssh -i ./travis.pem -l $DEVNET_SSH_USER $DEVNET_SSH_IP docker service update --image ${NETWORK}/besurpc-server:latest devnet_besurpc_server
      after_success:
        -  'curl -X POST --data-urlencode payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[devnet] Deployment succeeded\",\"pretext\":\"\",\"color\":\"good\",\"fields\":[{\"title\":\"[devnet] besurpc\",\"value\":\"Deployment succeeded.\",\"short\":true}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'
      after_failure:
        -  'curl -X POST --data-urlencode payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[devnet] Deployment failed\",\"pretext\":\"\",\"color\":\"danger\",\"fields\":[{\"title\":\"[devnet] besurpc\",\"value\":\"Deployment failed.\",\"short\":false}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'
 
    - stage: Deploy in testnet
      install: skip
      before_script:
        - openssl aes-256-cbc -K ${ENCRYPTED_STRING_KEY} -iv ${ENCRYPTED_STRING_KEY} -in travis.pem.enc -out travis.pem -d
      script:
        - ssh -i ./travis.pem -l $TESTNET_SSH_USER $TESTNET_SSH_IP docker service update --image ${NETWORK}/besurpc-client:testnet testnet_besurpc
        - ssh -i ./travis.pem -l $TESTNET_SSH_USER $TESTNET_SSH_IP docker service update --image ${NETWORK}/besurpc-server:testnet testnet_besurpc_crawler
        - ssh -i ./travis.pem -l $TESTNET_SSH_USER $TESTNET_SSH_IP docker service update --image ${NETWORK}/besurpc-server:testnet testnet_besurpc_server
      after_success:
        -  'curl -X POST --data-urlencode payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[testnet] Deployment succeeded\",\"pretext\":\"\",\"color\":\"good\",\"fields\":[{\"title\":\"[testnet] besurpc\",\"value\":\"Deployment succeeded.\",\"short\":true}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'
      after_failure:
        -  'curl -X POST --data-urlencode payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[testnet] Deployment failed\",\"pretext\":\"\",\"color\":\"danger\",\"fields\":[{\"title\":\"[testnet] besurpc\",\"value\":\"Deployment failed.\",\"short\":false}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'
 
stages:
  - name: Lint
  - name: Tests
  - name: Build and push image
    if: type != pull_request AND branch = master AND tag IS blank AND repo = ${NETWORK}/besurpc
  - name: Build and push image (tagged)
    if: type != pull_request AND branch =~ ^v AND tag IS present AND repo = ${NETWORK}/besurpc
  - name: Deploy in devnet
    if: type != pull_request AND branch = master AND repo = ${NETWORK}/besurpc
  - name: Deploy in testnet
    if: type != pull_request AND branch =~ ^v AND tag IS present AND repo = ${NETWORK}/besurpc
